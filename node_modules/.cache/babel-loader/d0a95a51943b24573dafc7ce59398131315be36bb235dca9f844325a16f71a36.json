{"ast":null,"code":"import HeaderViewVue from \"../components/HeaderView.vue\";\nimport FooterView from \"../components/FooterView.vue\";\nimport { ref } from \"vue\";\nexport default {\n  __name: 'LeadView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const sheetData = ref([]);\n    const headers = ref([]);\n    fetchData();\n    async function fetchData() {\n      let url = \"https://script.google.com/macros/s/AKfycbxTV48-C3biF-CBP5O6JAY-qtKF6JAVILJFZIRQDqhX2xZq7aMCbsnpp6jBerMHAOIKqw/exec\";\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.length > 0) {\n          headers.value = Object.keys(data[0]); // Extract column headers\n          sheetData.value = data; // Store data for the table\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n    const __returned__ = {\n      sheetData,\n      headers,\n      fetchData,\n      HeaderViewVue,\n      FooterView,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["HeaderViewVue","FooterView","ref","sheetData","headers","fetchData","url","response","fetch","data","json","length","value","Object","keys","error","console"],"sources":["/home/mahendran/mahendran/project/nextstep/src/views/LeadView.vue"],"sourcesContent":["<template>\n  <div>\n    <HeaderViewVue />\n    <div class=\"\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\" class=\"\">S.No</th>\n\n            <th scope=\"col\" class=\"\" v-for=\"header in headers\" :key=\"header\">\n              {{ header }}\n            </th>\n          </tr>\n        </thead>\n\n        <tbody class=\"bg-white\">\n          <tr\n            v-for=\"(lead, index) in sheetData\"\n            :key=\"lead\"\n            class=\"hover:bg-gray-200 text-sm\"\n          >\n            <td class=\"\">\n              {{ index + 1 }}\n            </td>\n            <td class=\"\">\n              {{ lead.name }}\n            </td>\n            <td class=\"\">\n              {{ lead.mail }}\n            </td>\n            <td class=\"\">\n              {{ lead.phone }}\n            </td>\n            <td class=\"\">\n              {{ lead.city }}\n            </td>\n            <td class=\"\">\n              {{ lead.state }}\n            </td>\n            <td class=\"\">\n              {{ lead.program }}\n            </td>\n            <td class=\"\">\n              {{ lead.course }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <FooterView />\n  </div>\n</template>\n\n<script setup>\nimport HeaderViewVue from \"../components/HeaderView.vue\";\nimport FooterView from \"../components/FooterView.vue\";\nimport { ref } from \"vue\";\nconst sheetData = ref([]);\nconst headers = ref([]);\nfetchData();\nasync function fetchData() {\n  let url =\n    \"https://script.google.com/macros/s/AKfycbxTV48-C3biF-CBP5O6JAY-qtKF6JAVILJFZIRQDqhX2xZq7aMCbsnpp6jBerMHAOIKqw/exec\";\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (data.length > 0) {\n      headers.value = Object.keys(data[0]); // Extract column headers\n      sheetData.value = data; // Store data for the table\n    }\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n  }\n}\n</script>\n\n<style></style>\n"],"mappings":"AAsDA,OAAOA,aAAa,MAAM,8BAA8B;AACxD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,SAASC,GAAG,QAAQ,KAAK;;;;;;;IACzB,MAAMC,SAAS,GAAGD,GAAG,CAAC,EAAE,CAAC;IACzB,MAAME,OAAO,GAAGF,GAAG,CAAC,EAAE,CAAC;IACvBG,SAAS,CAAC,CAAC;IACX,eAAeA,SAASA,CAAA,EAAG;MACzB,IAAIC,GAAG,GACL,oHAAoH;MAEtH,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;UACnBP,OAAO,CAACQ,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtCN,SAAS,CAACS,KAAK,GAAGH,IAAI,CAAC,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}