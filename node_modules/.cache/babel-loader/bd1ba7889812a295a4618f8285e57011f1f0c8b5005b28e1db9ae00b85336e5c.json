{"ast":null,"code":"require(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\nconst stateUrl = 'https://api.countrystatecity.in/v1/countries/IN/states';\nconst cityUrl = 'https://api.countrystatecity.in/v1/countries/IN/states/';\nconst apiKey = 'RW54RWI5d09URDZSSlN1cFNPQnE3cHpDRXlFY0JTUmxCTE84YXRFYQ==';\n\n// Fetch States\nasync function fetchStates() {\n  const response = await fetch(stateUrl, {\n    headers: {\n      'X-CSCAPI-KEY': apiKey\n    }\n  });\n  const states = await response.json();\n  const stateSelect = document.getElementById('stateid');\n  stateSelect.innerHTML = '<option value=\"\">Select State*</option>';\n  states.forEach(state => {\n    const option = document.createElement('option');\n    option.value = state.iso2;\n    option.textContent = state.name;\n    stateSelect.appendChild(option);\n  });\n}\n\n// Fetch Cities based on state\nasync function fetchCities(stateCode) {\n  const response = await fetch(`${cityUrl}${stateCode}/cities`, {\n    headers: {\n      'X-CSCAPI-KEY': apiKey\n    }\n  });\n  const cities = await response.json();\n  const citySelect = document.getElementById('cityid');\n  citySelect.innerHTML = '<option value=\"\">Select City*</option>';\n  cities.forEach(city => {\n    const option = document.createElement('option');\n    option.value = city.name;\n    option.textContent = city.name;\n    citySelect.appendChild(option);\n  });\n}\n\n// Event Listeners\ndocument.getElementById('stateid').addEventListener('change', function () {\n  const stateCode = this.value;\n  if (stateCode) {\n    fetchCities(stateCode);\n  } else {\n    document.getElementById('cityid').innerHTML = '<option value=\"\">Select City*</option>';\n  }\n});\n\n// Submit Form via AJAX\ndocument.getElementById('formID').addEventListener('submit', async function (e) {\n  e.preventDefault();\n  const formData = new FormData(this);\n  const response = await fetch('submitForm.php', {\n    method: 'POST',\n    body: formData\n  });\n  const result = await response.json();\n  if (result.success) {\n    alert('Form submitted successfully!');\n    document.getElementById('formID').reset();\n  } else {\n    alert('Submission failed. Please try again.');\n  }\n});\n\n// Initialize States on page load\nfetchStates();","map":{"version":3,"names":["stateUrl","cityUrl","apiKey","fetchStates","response","fetch","headers","states","json","stateSelect","document","getElementById","innerHTML","forEach","state","option","createElement","value","iso2","textContent","name","appendChild","fetchCities","stateCode","cities","citySelect","city","addEventListener","e","preventDefault","formData","FormData","method","body","result","success","alert","reset"],"sources":["/home/mahendran/mahendran/project/nextstep/src/assets/js/formsubmission.js"],"sourcesContent":["const stateUrl = 'https://api.countrystatecity.in/v1/countries/IN/states';\nconst cityUrl = 'https://api.countrystatecity.in/v1/countries/IN/states/';\nconst apiKey = 'RW54RWI5d09URDZSSlN1cFNPQnE3cHpDRXlFY0JTUmxCTE84YXRFYQ==';\n\n// Fetch States\nasync function fetchStates() {\n  const response = await fetch(stateUrl, {\n    headers: { 'X-CSCAPI-KEY': apiKey },\n  });\n  const states = await response.json();\n\n  const stateSelect = document.getElementById('stateid');\n  stateSelect.innerHTML = '<option value=\"\">Select State*</option>';\n  states.forEach((state) => {\n    const option = document.createElement('option');\n    option.value = state.iso2;\n    option.textContent = state.name;\n    stateSelect.appendChild(option);\n  });\n}\n\n// Fetch Cities based on state\nasync function fetchCities(stateCode) {\n  const response = await fetch(`${cityUrl}${stateCode}/cities`, {\n    headers: { 'X-CSCAPI-KEY': apiKey },\n  });\n  const cities = await response.json();\n\n  const citySelect = document.getElementById('cityid');\n  citySelect.innerHTML = '<option value=\"\">Select City*</option>';\n  cities.forEach((city) => {\n    const option = document.createElement('option');\n    option.value = city.name;\n    option.textContent = city.name;\n    citySelect.appendChild(option);\n  });\n}\n\n// Event Listeners\ndocument.getElementById('stateid').addEventListener('change', function () {\n  const stateCode = this.value;\n  if (stateCode) {\n    fetchCities(stateCode);\n  } else {\n    document.getElementById('cityid').innerHTML = '<option value=\"\">Select City*</option>';\n  }\n});\n\n// Submit Form via AJAX\ndocument.getElementById('formID').addEventListener('submit', async function (e) {\n  e.preventDefault();\n\n  const formData = new FormData(this);\n\n  const response = await fetch('submitForm.php', {\n    method: 'POST',\n    body: formData,\n  });\n\n  const result = await response.json();\n  if (result.success) {\n    alert('Form submitted successfully!');\n    document.getElementById('formID').reset();\n  } else {\n    alert('Submission failed. Please try again.');\n  }\n});\n\n// Initialize States on page load\nfetchStates();\n"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG,wDAAwD;AACzE,MAAMC,OAAO,GAAG,yDAAyD;AACzE,MAAMC,MAAM,GAAG,0DAA0D;;AAEzE;AACA,eAAeC,WAAWA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,QAAQ,EAAE;IACrCM,OAAO,EAAE;MAAE,cAAc,EAAEJ;IAAO;EACpC,CAAC,CAAC;EACF,MAAMK,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAEpC,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;EACtDF,WAAW,CAACG,SAAS,GAAG,yCAAyC;EACjEL,MAAM,CAACM,OAAO,CAAEC,KAAK,IAAK;IACxB,MAAMC,MAAM,GAAGL,QAAQ,CAACM,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,KAAK,GAAGH,KAAK,CAACI,IAAI;IACzBH,MAAM,CAACI,WAAW,GAAGL,KAAK,CAACM,IAAI;IAC/BX,WAAW,CAACY,WAAW,CAACN,MAAM,CAAC;EACjC,CAAC,CAAC;AACJ;;AAEA;AACA,eAAeO,WAAWA,CAACC,SAAS,EAAE;EACpC,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,GAAGsB,SAAS,SAAS,EAAE;IAC5DjB,OAAO,EAAE;MAAE,cAAc,EAAEJ;IAAO;EACpC,CAAC,CAAC;EACF,MAAMsB,MAAM,GAAG,MAAMpB,QAAQ,CAACI,IAAI,CAAC,CAAC;EAEpC,MAAMiB,UAAU,GAAGf,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;EACpDc,UAAU,CAACb,SAAS,GAAG,wCAAwC;EAC/DY,MAAM,CAACX,OAAO,CAAEa,IAAI,IAAK;IACvB,MAAMX,MAAM,GAAGL,QAAQ,CAACM,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,KAAK,GAAGS,IAAI,CAACN,IAAI;IACxBL,MAAM,CAACI,WAAW,GAAGO,IAAI,CAACN,IAAI;IAC9BK,UAAU,CAACJ,WAAW,CAACN,MAAM,CAAC;EAChC,CAAC,CAAC;AACJ;;AAEA;AACAL,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACgB,gBAAgB,CAAC,QAAQ,EAAE,YAAY;EACxE,MAAMJ,SAAS,GAAG,IAAI,CAACN,KAAK;EAC5B,IAAIM,SAAS,EAAE;IACbD,WAAW,CAACC,SAAS,CAAC;EACxB,CAAC,MAAM;IACLb,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACC,SAAS,GAAG,wCAAwC;EACxF;AACF,CAAC,CAAC;;AAEF;AACAF,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACgB,gBAAgB,CAAC,QAAQ,EAAE,gBAAgBC,CAAC,EAAE;EAC9EA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,IAAI,CAAC;EAEnC,MAAM3B,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,EAAE;IAC7C2B,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEH;EACR,CAAC,CAAC;EAEF,MAAMI,MAAM,GAAG,MAAM9B,QAAQ,CAACI,IAAI,CAAC,CAAC;EACpC,IAAI0B,MAAM,CAACC,OAAO,EAAE;IAClBC,KAAK,CAAC,8BAA8B,CAAC;IACrC1B,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAAC0B,KAAK,CAAC,CAAC;EAC3C,CAAC,MAAM;IACLD,KAAK,CAAC,sCAAsC,CAAC;EAC/C;AACF,CAAC,CAAC;;AAEF;AACAjC,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}